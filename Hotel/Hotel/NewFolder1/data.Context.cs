//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hotel.NewFolder1
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HotelEntities : DbContext
    {
        public HotelEntities()
            : base("name=HotelEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BookRoom> BookRooms { get; set; }
        public virtual DbSet<ChucVu> ChucVus { get; set; }
        public virtual DbSet<CTDichVu> CTDichVus { get; set; }
        public virtual DbSet<CTHoaDon> CTHoaDons { get; set; }
        public virtual DbSet<DichVu> DichVus { get; set; }
        public virtual DbSet<HoaDon> HoaDons { get; set; }
        public virtual DbSet<KhachHang> KhachHangs { get; set; }
        public virtual DbSet<KhuVuc> KhuVucs { get; set; }
        public virtual DbSet<LichDonPhong> LichDonPhongs { get; set; }
        public virtual DbSet<LoaiPhong> LoaiPhongs { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<NhanVien> NhanViens { get; set; }
        public virtual DbSet<PhanQuyen> PhanQuyens { get; set; }
        public virtual DbSet<Phong> Phongs { get; set; }
        public virtual DbSet<PhongBan> PhongBans { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TTMonAn> TTMonAns { get; set; }
        public virtual DbSet<VatDung> VatDungs { get; set; }
        public virtual DbSet<DisplayKH> DisplayKHs { get; set; }
        public virtual DbSet<vv_HoaDon> vv_HoaDon { get; set; }
        public virtual DbSet<vv_KHD> vv_KHD { get; set; }
        public virtual DbSet<vv_Phong> vv_Phong { get; set; }
        public virtual DbSet<vv_PhongHD> vv_PhongHD { get; set; }
        public virtual DbSet<vv_rpKhachHang> vv_rpKhachHang { get; set; }
        public virtual DbSet<vv_rpNhanVien> vv_rpNhanVien { get; set; }
        public virtual DbSet<vv_rpNhanVienShow> vv_rpNhanVienShow { get; set; }
        public virtual DbSet<vv_rpPhong> vv_rpPhong { get; set; }
        public virtual DbSet<vv_sl> vv_sl { get; set; }
        public virtual DbSet<vv_SLSD> vv_SLSD { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<sp_checkLoginLP_Result> sp_checkLoginLP(Nullable<int> ma)
        {
            var maParameter = ma.HasValue ?
                new ObjectParameter("ma", ma) :
                new ObjectParameter("ma", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_checkLoginLP_Result>("sp_checkLoginLP", maParameter);
        }
    
        public virtual int sp_ChucVu_ADD(string ten, Nullable<double> hsl)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var hslParameter = hsl.HasValue ?
                new ObjectParameter("hsl", hsl) :
                new ObjectParameter("hsl", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ChucVu_ADD", tenParameter, hslParameter);
        }
    
        public virtual int sp_ChucVu_Update(string ten, Nullable<double> gia, Nullable<int> ma)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var giaParameter = gia.HasValue ?
                new ObjectParameter("gia", gia) :
                new ObjectParameter("gia", typeof(double));
    
            var maParameter = ma.HasValue ?
                new ObjectParameter("ma", ma) :
                new ObjectParameter("ma", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ChucVu_Update", tenParameter, giaParameter, maParameter);
        }
    
        public virtual int sp_ChucVuGet_By_Top(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("top", top) :
                new ObjectParameter("top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("where", where) :
                new ObjectParameter("where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("order", order) :
                new ObjectParameter("order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ChucVuGet_By_Top", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_delete_Phong(Nullable<int> ma)
        {
            var maParameter = ma.HasValue ?
                new ObjectParameter("ma", ma) :
                new ObjectParameter("ma", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_Phong", maParameter);
        }
    
        public virtual int sp_DichVu_ADD(string ten, Nullable<double> gia, Nullable<bool> trangThai, string ghichu)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var giaParameter = gia.HasValue ?
                new ObjectParameter("gia", gia) :
                new ObjectParameter("gia", typeof(double));
    
            var trangThaiParameter = trangThai.HasValue ?
                new ObjectParameter("trangThai", trangThai) :
                new ObjectParameter("trangThai", typeof(bool));
    
            var ghichuParameter = ghichu != null ?
                new ObjectParameter("ghichu", ghichu) :
                new ObjectParameter("ghichu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DichVu_ADD", tenParameter, giaParameter, trangThaiParameter, ghichuParameter);
        }
    
        public virtual int sp_DichVu_Update(string ten, Nullable<double> gia, Nullable<int> ma, Nullable<int> trangthai, string ghichu)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var giaParameter = gia.HasValue ?
                new ObjectParameter("gia", gia) :
                new ObjectParameter("gia", typeof(double));
    
            var maParameter = ma.HasValue ?
                new ObjectParameter("ma", ma) :
                new ObjectParameter("ma", typeof(int));
    
            var trangthaiParameter = trangthai.HasValue ?
                new ObjectParameter("trangthai", trangthai) :
                new ObjectParameter("trangthai", typeof(int));
    
            var ghichuParameter = ghichu != null ?
                new ObjectParameter("ghichu", ghichu) :
                new ObjectParameter("ghichu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DichVu_Update", tenParameter, giaParameter, maParameter, trangthaiParameter, ghichuParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_DSP_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("top", top) :
                new ObjectParameter("top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("where", where) :
                new ObjectParameter("where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("order", order) :
                new ObjectParameter("order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DSP_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Get_By_Top(string tenbang, string top, string where, string order)
        {
            var tenbangParameter = tenbang != null ?
                new ObjectParameter("tenbang", tenbang) :
                new ObjectParameter("tenbang", typeof(string));
    
            var topParameter = top != null ?
                new ObjectParameter("top", top) :
                new ObjectParameter("top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("where", where) :
                new ObjectParameter("where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("order", order) :
                new ObjectParameter("order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Get_By_Top", tenbangParameter, topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Get_By_Top_Phong(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("top", top) :
                new ObjectParameter("top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("where", where) :
                new ObjectParameter("where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("order", order) :
                new ObjectParameter("order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Get_By_Top_Phong", topParameter, whereParameter, orderParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_Insearch_PQ(string maTaiKhoan, Nullable<bool> trangChu, Nullable<bool> tiepNhanKhach, Nullable<bool> danhSachPhong, Nullable<bool> loaiPhong, Nullable<bool> dichVu, Nullable<bool> thucDon, Nullable<bool> phongBan, Nullable<bool> khuVuc, Nullable<bool> thongTinKhach, Nullable<bool> thongTinNV, Nullable<bool> danhSachHD, Nullable<bool> chucVu, Nullable<bool> lichDonPhong, Nullable<bool> tKCuaTui, Nullable<int> maNV, Nullable<bool> phanQuyen)
        {
            var maTaiKhoanParameter = maTaiKhoan != null ?
                new ObjectParameter("MaTaiKhoan", maTaiKhoan) :
                new ObjectParameter("MaTaiKhoan", typeof(string));
    
            var trangChuParameter = trangChu.HasValue ?
                new ObjectParameter("TrangChu", trangChu) :
                new ObjectParameter("TrangChu", typeof(bool));
    
            var tiepNhanKhachParameter = tiepNhanKhach.HasValue ?
                new ObjectParameter("TiepNhanKhach", tiepNhanKhach) :
                new ObjectParameter("TiepNhanKhach", typeof(bool));
    
            var danhSachPhongParameter = danhSachPhong.HasValue ?
                new ObjectParameter("DanhSachPhong", danhSachPhong) :
                new ObjectParameter("DanhSachPhong", typeof(bool));
    
            var loaiPhongParameter = loaiPhong.HasValue ?
                new ObjectParameter("LoaiPhong", loaiPhong) :
                new ObjectParameter("LoaiPhong", typeof(bool));
    
            var dichVuParameter = dichVu.HasValue ?
                new ObjectParameter("DichVu", dichVu) :
                new ObjectParameter("DichVu", typeof(bool));
    
            var thucDonParameter = thucDon.HasValue ?
                new ObjectParameter("ThucDon", thucDon) :
                new ObjectParameter("ThucDon", typeof(bool));
    
            var phongBanParameter = phongBan.HasValue ?
                new ObjectParameter("PhongBan", phongBan) :
                new ObjectParameter("PhongBan", typeof(bool));
    
            var khuVucParameter = khuVuc.HasValue ?
                new ObjectParameter("KhuVuc", khuVuc) :
                new ObjectParameter("KhuVuc", typeof(bool));
    
            var thongTinKhachParameter = thongTinKhach.HasValue ?
                new ObjectParameter("ThongTinKhach", thongTinKhach) :
                new ObjectParameter("ThongTinKhach", typeof(bool));
    
            var thongTinNVParameter = thongTinNV.HasValue ?
                new ObjectParameter("ThongTinNV", thongTinNV) :
                new ObjectParameter("ThongTinNV", typeof(bool));
    
            var danhSachHDParameter = danhSachHD.HasValue ?
                new ObjectParameter("DanhSachHD", danhSachHD) :
                new ObjectParameter("DanhSachHD", typeof(bool));
    
            var chucVuParameter = chucVu.HasValue ?
                new ObjectParameter("ChucVu", chucVu) :
                new ObjectParameter("ChucVu", typeof(bool));
    
            var lichDonPhongParameter = lichDonPhong.HasValue ?
                new ObjectParameter("LichDonPhong", lichDonPhong) :
                new ObjectParameter("LichDonPhong", typeof(bool));
    
            var tKCuaTuiParameter = tKCuaTui.HasValue ?
                new ObjectParameter("TKCuaTui", tKCuaTui) :
                new ObjectParameter("TKCuaTui", typeof(bool));
    
            var maNVParameter = maNV.HasValue ?
                new ObjectParameter("MaNV", maNV) :
                new ObjectParameter("MaNV", typeof(int));
    
            var phanQuyenParameter = phanQuyen.HasValue ?
                new ObjectParameter("PhanQuyen", phanQuyen) :
                new ObjectParameter("PhanQuyen", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insearch_PQ", maTaiKhoanParameter, trangChuParameter, tiepNhanKhachParameter, danhSachPhongParameter, loaiPhongParameter, dichVuParameter, thucDonParameter, phongBanParameter, khuVucParameter, thongTinKhachParameter, thongTinNVParameter, danhSachHDParameter, chucVuParameter, lichDonPhongParameter, tKCuaTuiParameter, maNVParameter, phanQuyenParameter);
        }
    
        public virtual int sp_insert_Phong(string tenphong, string mota, string vitri, Nullable<int> maloaiphong, Nullable<int> nguoilon, Nullable<int> treem, Nullable<int> makv, Nullable<int> trangthai, byte[] anh)
        {
            var tenphongParameter = tenphong != null ?
                new ObjectParameter("tenphong", tenphong) :
                new ObjectParameter("tenphong", typeof(string));
    
            var motaParameter = mota != null ?
                new ObjectParameter("mota", mota) :
                new ObjectParameter("mota", typeof(string));
    
            var vitriParameter = vitri != null ?
                new ObjectParameter("vitri", vitri) :
                new ObjectParameter("vitri", typeof(string));
    
            var maloaiphongParameter = maloaiphong.HasValue ?
                new ObjectParameter("maloaiphong", maloaiphong) :
                new ObjectParameter("maloaiphong", typeof(int));
    
            var nguoilonParameter = nguoilon.HasValue ?
                new ObjectParameter("nguoilon", nguoilon) :
                new ObjectParameter("nguoilon", typeof(int));
    
            var treemParameter = treem.HasValue ?
                new ObjectParameter("treem", treem) :
                new ObjectParameter("treem", typeof(int));
    
            var makvParameter = makv.HasValue ?
                new ObjectParameter("makv", makv) :
                new ObjectParameter("makv", typeof(int));
    
            var trangthaiParameter = trangthai.HasValue ?
                new ObjectParameter("trangthai", trangthai) :
                new ObjectParameter("trangthai", typeof(int));
    
            var anhParameter = anh != null ?
                new ObjectParameter("anh", anh) :
                new ObjectParameter("anh", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_Phong", tenphongParameter, motaParameter, vitriParameter, maloaiphongParameter, nguoilonParameter, treemParameter, makvParameter, trangthaiParameter, anhParameter);
        }
    
        public virtual int sp_KhuVuc_ADD(string ten, string mota)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var motaParameter = mota != null ?
                new ObjectParameter("mota", mota) :
                new ObjectParameter("mota", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_KhuVuc_ADD", tenParameter, motaParameter);
        }
    
        public virtual int sp_KhuVuc_Update(string ten, Nullable<int> ma, string mota)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var maParameter = ma.HasValue ?
                new ObjectParameter("ma", ma) :
                new ObjectParameter("ma", typeof(int));
    
            var motaParameter = mota != null ?
                new ObjectParameter("mota", mota) :
                new ObjectParameter("mota", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_KhuVuc_Update", tenParameter, maParameter, motaParameter);
        }
    
        public virtual int sp_loadcb(string ma, string ten, string tenbang)
        {
            var maParameter = ma != null ?
                new ObjectParameter("ma", ma) :
                new ObjectParameter("ma", typeof(string));
    
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var tenbangParameter = tenbang != null ?
                new ObjectParameter("tenbang", tenbang) :
                new ObjectParameter("tenbang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_loadcb", maParameter, tenParameter, tenbangParameter);
        }
    
        public virtual int sp_LoaiPhong_Delete(Nullable<int> ma)
        {
            var maParameter = ma.HasValue ?
                new ObjectParameter("ma", ma) :
                new ObjectParameter("ma", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LoaiPhong_Delete", maParameter);
        }
    
        public virtual int sp_LoaiPhong_Get_By_Top(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("top", top) :
                new ObjectParameter("top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("where", where) :
                new ObjectParameter("where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("order", order) :
                new ObjectParameter("order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LoaiPhong_Get_By_Top", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_LoaiPhong_insert(string ten, Nullable<double> gia, Nullable<int> trangthai)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var giaParameter = gia.HasValue ?
                new ObjectParameter("gia", gia) :
                new ObjectParameter("gia", typeof(double));
    
            var trangthaiParameter = trangthai.HasValue ?
                new ObjectParameter("trangthai", trangthai) :
                new ObjectParameter("trangthai", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LoaiPhong_insert", tenParameter, giaParameter, trangthaiParameter);
        }
    
        public virtual ObjectResult<sp_LoaiPhong_Search_Result> sp_LoaiPhong_Search(string ma, string ten, string gia, string trangthai)
        {
            var maParameter = ma != null ?
                new ObjectParameter("ma", ma) :
                new ObjectParameter("ma", typeof(string));
    
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var giaParameter = gia != null ?
                new ObjectParameter("gia", gia) :
                new ObjectParameter("gia", typeof(string));
    
            var trangthaiParameter = trangthai != null ?
                new ObjectParameter("trangthai", trangthai) :
                new ObjectParameter("trangthai", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_LoaiPhong_Search_Result>("sp_LoaiPhong_Search", maParameter, tenParameter, giaParameter, trangthaiParameter);
        }
    
        public virtual int sp_LoaiPhong_Update(Nullable<int> ma, string ten, Nullable<double> gia, Nullable<int> trangthai)
        {
            var maParameter = ma.HasValue ?
                new ObjectParameter("ma", ma) :
                new ObjectParameter("ma", typeof(int));
    
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var giaParameter = gia.HasValue ?
                new ObjectParameter("gia", gia) :
                new ObjectParameter("gia", typeof(double));
    
            var trangthaiParameter = trangthai.HasValue ?
                new ObjectParameter("trangthai", trangthai) :
                new ObjectParameter("trangthai", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LoaiPhong_Update", maParameter, tenParameter, giaParameter, trangthaiParameter);
        }
    
        public virtual ObjectResult<sp_login_Result> sp_login(string email, string pass)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_login_Result>("sp_login", emailParameter, passParameter);
        }
    
        public virtual ObjectResult<sp_lstHoaDon_Result> sp_lstHoaDon()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_lstHoaDon_Result>("sp_lstHoaDon");
        }
    
        public virtual int sp_PhongBan_ADD(string ten, Nullable<int> trangThai)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var trangThaiParameter = trangThai.HasValue ?
                new ObjectParameter("TrangThai", trangThai) :
                new ObjectParameter("TrangThai", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PhongBan_ADD", tenParameter, trangThaiParameter);
        }
    
        public virtual int sp_PhongBan_Update(string ten, Nullable<int> ma, Nullable<int> trangthai)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("ten", ten) :
                new ObjectParameter("ten", typeof(string));
    
            var maParameter = ma.HasValue ?
                new ObjectParameter("ma", ma) :
                new ObjectParameter("ma", typeof(int));
    
            var trangthaiParameter = trangthai.HasValue ?
                new ObjectParameter("trangthai", trangthai) :
                new ObjectParameter("trangthai", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PhongBan_Update", tenParameter, maParameter, trangthaiParameter);
        }
    
        public virtual ObjectResult<sp_PQ_Get_By_Top_Result> sp_PQ_Get_By_Top()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PQ_Get_By_Top_Result>("sp_PQ_Get_By_Top");
        }
    
        public virtual ObjectResult<sp_PQ_Get_By_Top1_Result> sp_PQ_Get_By_Top1(string email, string pass)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PQ_Get_By_Top1_Result>("sp_PQ_Get_By_Top1", emailParameter, passParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_Search_PQ(string tk, string tennv, string manv, string tencv)
        {
            var tkParameter = tk != null ?
                new ObjectParameter("tk", tk) :
                new ObjectParameter("tk", typeof(string));
    
            var tennvParameter = tennv != null ?
                new ObjectParameter("tennv", tennv) :
                new ObjectParameter("tennv", typeof(string));
    
            var manvParameter = manv != null ?
                new ObjectParameter("manv", manv) :
                new ObjectParameter("manv", typeof(string));
    
            var tencvParameter = tencv != null ?
                new ObjectParameter("tencv", tencv) :
                new ObjectParameter("tencv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Search_PQ", tkParameter, tennvParameter, manvParameter, tencvParameter);
        }
    
        public virtual int sp_update_Phong(Nullable<int> maphong, string tenphong, string mota, string vitri, Nullable<int> maloaiphong, Nullable<int> nguoilon, Nullable<int> treem, Nullable<int> makv, Nullable<int> trangthai, byte[] anh)
        {
            var maphongParameter = maphong.HasValue ?
                new ObjectParameter("maphong", maphong) :
                new ObjectParameter("maphong", typeof(int));
    
            var tenphongParameter = tenphong != null ?
                new ObjectParameter("tenphong", tenphong) :
                new ObjectParameter("tenphong", typeof(string));
    
            var motaParameter = mota != null ?
                new ObjectParameter("mota", mota) :
                new ObjectParameter("mota", typeof(string));
    
            var vitriParameter = vitri != null ?
                new ObjectParameter("vitri", vitri) :
                new ObjectParameter("vitri", typeof(string));
    
            var maloaiphongParameter = maloaiphong.HasValue ?
                new ObjectParameter("maloaiphong", maloaiphong) :
                new ObjectParameter("maloaiphong", typeof(int));
    
            var nguoilonParameter = nguoilon.HasValue ?
                new ObjectParameter("nguoilon", nguoilon) :
                new ObjectParameter("nguoilon", typeof(int));
    
            var treemParameter = treem.HasValue ?
                new ObjectParameter("treem", treem) :
                new ObjectParameter("treem", typeof(int));
    
            var makvParameter = makv.HasValue ?
                new ObjectParameter("makv", makv) :
                new ObjectParameter("makv", typeof(int));
    
            var trangthaiParameter = trangthai.HasValue ?
                new ObjectParameter("trangthai", trangthai) :
                new ObjectParameter("trangthai", typeof(int));
    
            var anhParameter = anh != null ?
                new ObjectParameter("anh", anh) :
                new ObjectParameter("anh", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_Phong", maphongParameter, tenphongParameter, motaParameter, vitriParameter, maloaiphongParameter, nguoilonParameter, treemParameter, makvParameter, trangthaiParameter, anhParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
